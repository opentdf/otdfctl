// Code generated by adder. DO NOT EDIT.

package generated

import (
	
	"github.com/spf13/cobra"
)


// ProfileRequest represents the parameters for the profile command
type ProfileRequest struct {
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// ProfileHandler defines the function type for handling profile commands
type ProfileHandler func(cmd *cobra.Command, req *ProfileRequest) error

// NewProfileCommand creates a new profile command with the provided handler function
func NewProfileCommand(handler ProfileHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "profile",
		Aliases: []string{"profiles", "prof"},
		Short:   "Manage profiles (experimental)",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runProfile(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runProfile handles argument and flag extraction
func runProfile(cmd *cobra.Command, args []string, handler ProfileHandler) error {

	// Create request
	req := &ProfileRequest{
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
