// Code generated by adder. DO NOT EDIT.

package generated

import (
	
	"github.com/spf13/cobra"
)


// InteractiveRequest represents the parameters for the interactive command
type InteractiveRequest struct {
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// InteractiveHandler defines the function type for handling interactive commands
type InteractiveHandler func(cmd *cobra.Command, req *InteractiveRequest) error

// NewInteractiveCommand creates a new interactive command with the provided handler function
func NewInteractiveCommand(handler InteractiveHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "interactive",
		Aliases: []string{"i"},
		Short:   "Interactive Mode (experimental)",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runInteractive(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runInteractive handles argument and flag extraction
func runInteractive(cmd *cobra.Command, args []string, handler InteractiveHandler) error {

	// Create request
	req := &InteractiveRequest{
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
