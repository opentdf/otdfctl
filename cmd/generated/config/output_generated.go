// Code generated by adder. DO NOT EDIT.

package config

import (
	
	"github.com/spf13/cobra"
)

// OutputRequestFlags represents the flags for the output command
type OutputRequestFlags struct {
	Format string `json:"format"` // 'json' or 'styled' as the configured output format
}

// OutputRequest represents the parameters for the output command
type OutputRequest struct {
	Flags OutputRequestFlags `json:"flags"`
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// OutputHandler defines the function type for handling output commands
type OutputHandler func(cmd *cobra.Command, req *OutputRequest) error

// NewOutputCommand creates a new output command with the provided handler function
func NewOutputCommand(handler OutputHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "output",
		Short:   "Define the configured output format",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runOutput(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags
	cmd.Flags().String("format", "styled", "'json' or 'styled' as the configured output format")

	return cmd
}

// runOutput handles argument and flag extraction
func runOutput(cmd *cobra.Command, args []string, handler OutputHandler) error {
	format, _ := cmd.Flags().GetString("format")

	// Create request
	req := &OutputRequest{
		Flags: OutputRequestFlags{
			Format: format,
		},
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
