// Code generated by adder. DO NOT EDIT.

package config

import (
	
	"github.com/spf13/cobra"
)


// ConfigRequest represents the parameters for the config command
type ConfigRequest struct {
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// ConfigHandler defines the function type for handling config commands
type ConfigHandler func(cmd *cobra.Command, req *ConfigRequest) error

// NewConfigCommand creates a new config command with the provided handler function
func NewConfigCommand(handler ConfigHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "config",
		Short:   "Manage Configuration",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runConfig(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runConfig handles argument and flag extraction
func runConfig(cmd *cobra.Command, args []string, handler ConfigHandler) error {

	// Create request
	req := &ConfigRequest{
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
