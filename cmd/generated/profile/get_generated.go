// Code generated by adder. DO NOT EDIT.

package profile

import (
	
	"github.com/spf13/cobra"
)

// GetRequestArguments represents the arguments for the get command
type GetRequestArguments struct {
	Profile string `json:"profile" validate:"required"` // Name of the profile to retrieve
}

// GetRequest represents the parameters for the get command
type GetRequest struct {
	Arguments GetRequestArguments `json:"arguments"`
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// GetHandler defines the function type for handling get commands
type GetHandler func(cmd *cobra.Command, req *GetRequest) error

// NewGetCommand creates a new get command with the provided handler function
func NewGetCommand(handler GetHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "get [profile]",
		Short:   "Get a profile value",
		Args: cobra.ExactArgs(1),
		RunE: func(cmd *cobra.Command, args []string) error {
			return runGet(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runGet handles argument and flag extraction
func runGet(cmd *cobra.Command, args []string, handler GetHandler) error {
	profile := args[0]

	// Create request
	req := &GetRequest{
		Arguments: GetRequestArguments{
			Profile: profile,
		},
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
