// Code generated by adder. DO NOT EDIT.

package profile

import (
	
	"github.com/spf13/cobra"
)

// SetEndpointRequestArguments represents the arguments for the set-endpoint command
type SetEndpointRequestArguments struct {
	Profile string `json:"profile" validate:"required"` // Name of the profile to update
	Endpoint string `json:"endpoint" validate:"required"` // New endpoint URL for the profile
}
// SetEndpointRequestFlags represents the flags for the set-endpoint command
type SetEndpointRequestFlags struct {
	TlsNoVerify bool `json:"tlsNoVerify"` // Disable TLS verification
}

// SetEndpointRequest represents the parameters for the set-endpoint command
type SetEndpointRequest struct {
	Arguments SetEndpointRequestArguments `json:"arguments"`
	Flags SetEndpointRequestFlags `json:"flags"`
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// SetEndpointHandler defines the function type for handling set-endpoint commands
type SetEndpointHandler func(cmd *cobra.Command, req *SetEndpointRequest) error

// NewSetEndpointCommand creates a new set-endpoint command with the provided handler function
func NewSetEndpointCommand(handler SetEndpointHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "set-endpoint [profile] [endpoint]",
		Short:   "Set a profile value",
		Args: cobra.ExactArgs(2),
		RunE: func(cmd *cobra.Command, args []string) error {
			return runSetEndpoint(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags
	cmd.Flags().Bool("tls-no-verify", false, "Disable TLS verification")

	return cmd
}

// runSetEndpoint handles argument and flag extraction
func runSetEndpoint(cmd *cobra.Command, args []string, handler SetEndpointHandler) error {
	profile := args[0]
	endpoint := args[1]
	tlsNoVerify, _ := cmd.Flags().GetBool("tls-no-verify")

	// Create request
	req := &SetEndpointRequest{
		Arguments: SetEndpointRequestArguments{
			Profile: profile,
			Endpoint: endpoint,
		},
		Flags: SetEndpointRequestFlags{
			TlsNoVerify: tlsNoVerify,
		},
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
