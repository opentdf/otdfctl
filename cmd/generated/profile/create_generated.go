// Code generated by adder. DO NOT EDIT.

package profile

import (
	
	"github.com/spf13/cobra"
)

// CreateRequestArguments represents the arguments for the create command
type CreateRequestArguments struct {
	Profile string `json:"profile" validate:"required"` // Name of the profile to create
	Endpoint string `json:"endpoint" validate:"required"` // Platform endpoint URL
}
// CreateRequestFlags represents the flags for the create command
type CreateRequestFlags struct {
	SetDefault bool `json:"setDefault"` // Set the profile as default
	TlsNoVerify bool `json:"tlsNoVerify"` // Disable TLS verification
}

// CreateRequest represents the parameters for the create command
type CreateRequest struct {
	Arguments CreateRequestArguments `json:"arguments"`
	Flags CreateRequestFlags `json:"flags"`
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// CreateHandler defines the function type for handling create commands
type CreateHandler func(cmd *cobra.Command, req *CreateRequest) error

// NewCreateCommand creates a new create command with the provided handler function
func NewCreateCommand(handler CreateHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "create [profile] [endpoint]",
		Aliases: []string{"add"},
		Short:   "Create a new profile",
		Args: cobra.ExactArgs(2),
		RunE: func(cmd *cobra.Command, args []string) error {
			return runCreate(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags
	cmd.Flags().Bool("set-default", false, "Set the profile as default")
	cmd.Flags().Bool("tls-no-verify", false, "Disable TLS verification")

	return cmd
}

// runCreate handles argument and flag extraction
func runCreate(cmd *cobra.Command, args []string, handler CreateHandler) error {
	profile := args[0]
	endpoint := args[1]
	setDefault, _ := cmd.Flags().GetBool("set-default")
	tlsNoVerify, _ := cmd.Flags().GetBool("tls-no-verify")

	// Create request
	req := &CreateRequest{
		Arguments: CreateRequestArguments{
			Profile: profile,
			Endpoint: endpoint,
		},
		Flags: CreateRequestFlags{
			SetDefault: setDefault,
			TlsNoVerify: tlsNoVerify,
		},
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
