// Code generated by adder. DO NOT EDIT.

package profile

import (
	
	"github.com/spf13/cobra"
)

// SetDefaultRequestArguments represents the arguments for the set-default command
type SetDefaultRequestArguments struct {
	Profile string `json:"profile" validate:"required"` // Name of the profile to set as default
}

// SetDefaultRequest represents the parameters for the set-default command
type SetDefaultRequest struct {
	Arguments SetDefaultRequestArguments `json:"arguments"`
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// SetDefaultHandler defines the function type for handling set-default commands
type SetDefaultHandler func(cmd *cobra.Command, req *SetDefaultRequest) error

// NewSetDefaultCommand creates a new set-default command with the provided handler function
func NewSetDefaultCommand(handler SetDefaultHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "set-default [profile]",
		Short:   "Set a profile as default",
		Args: cobra.ExactArgs(1),
		RunE: func(cmd *cobra.Command, args []string) error {
			return runSetDefault(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runSetDefault handles argument and flag extraction
func runSetDefault(cmd *cobra.Command, args []string, handler SetDefaultHandler) error {
	profile := args[0]

	// Create request
	req := &SetDefaultRequest{
		Arguments: SetDefaultRequestArguments{
			Profile: profile,
		},
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
