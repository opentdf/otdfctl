// Code generated by adder. DO NOT EDIT.

package profile

import (
	
	"github.com/spf13/cobra"
)

// DeleteRequestArguments represents the arguments for the delete command
type DeleteRequestArguments struct {
	Profile string `json:"profile" validate:"required"` // Name of the profile to delete
}

// DeleteRequest represents the parameters for the delete command
type DeleteRequest struct {
	Arguments DeleteRequestArguments `json:"arguments"`
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// DeleteHandler defines the function type for handling delete commands
type DeleteHandler func(cmd *cobra.Command, req *DeleteRequest) error

// NewDeleteCommand creates a new delete command with the provided handler function
func NewDeleteCommand(handler DeleteHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "delete [profile]",
		Short:   "Delete a profile",
		Args: cobra.ExactArgs(1),
		RunE: func(cmd *cobra.Command, args []string) error {
			return runDelete(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runDelete handles argument and flag extraction
func runDelete(cmd *cobra.Command, args []string, handler DeleteHandler) error {
	profile := args[0]

	// Create request
	req := &DeleteRequest{
		Arguments: DeleteRequestArguments{
			Profile: profile,
		},
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
