// Code generated by adder. DO NOT EDIT.

package policy_subject_condition_sets

import (
	
	"github.com/spf13/cobra"
)


// SubjectConditionSetsRequest represents the parameters for the subject-condition-sets command
type SubjectConditionSetsRequest struct {
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// SubjectConditionSetsHandler defines the function type for handling subject-condition-sets commands
type SubjectConditionSetsHandler func(cmd *cobra.Command, req *SubjectConditionSetsRequest) error

// NewSubjectConditionSetsCommand creates a new subject-condition-sets command with the provided handler function
func NewSubjectConditionSetsCommand(handler SubjectConditionSetsHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "subject-condition-sets",
		Aliases: []string{"subcs", "scs", "subject-condition-set"},
		Short:   "Subject condition sets",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runSubjectConditionSets(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runSubjectConditionSets handles argument and flag extraction
func runSubjectConditionSets(cmd *cobra.Command, args []string, handler SubjectConditionSetsHandler) error {

	// Create request
	req := &SubjectConditionSetsRequest{
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
