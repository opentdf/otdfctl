// Code generated by adder. DO NOT EDIT.

package policy_kas_registry

import (
	
	"github.com/spf13/cobra"
)


// KasRegistryRequest represents the parameters for the kas-registry command
type KasRegistryRequest struct {
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// KasRegistryHandler defines the function type for handling kas-registry commands
type KasRegistryHandler func(cmd *cobra.Command, req *KasRegistryRequest) error

// NewKasRegistryCommand creates a new kas-registry command with the provided handler function
func NewKasRegistryCommand(handler KasRegistryHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "kas-registry",
		Aliases: []string{"kasr", "kas-registries"},
		Short:   "Manage KAS registrations",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runKasRegistry(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runKasRegistry handles argument and flag extraction
func runKasRegistry(cmd *cobra.Command, args []string, handler KasRegistryHandler) error {

	// Create request
	req := &KasRegistryRequest{
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
