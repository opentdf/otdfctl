// Code generated by adder. DO NOT EDIT.

package policy_kas_registry_key_base

import (
	
	"github.com/spf13/cobra"
)


// BaseRequest represents the parameters for the base command
type BaseRequest struct {
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// BaseHandler defines the function type for handling base commands
type BaseHandler func(cmd *cobra.Command, req *BaseRequest) error

// NewBaseCommand creates a new base command with the provided handler function
func NewBaseCommand(handler BaseHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "base",
		Short:   "Platform Base Key Management",
		Hidden: true,
		RunE: func(cmd *cobra.Command, args []string) error {
			return runBase(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runBase handles argument and flag extraction
func runBase(cmd *cobra.Command, args []string, handler BaseHandler) error {

	// Create request
	req := &BaseRequest{
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
