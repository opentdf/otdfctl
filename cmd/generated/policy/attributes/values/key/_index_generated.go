// Code generated by adder. DO NOT EDIT.

package policy_attributes_values_key

import (
	
	"github.com/spf13/cobra"
)


// KeyRequest represents the parameters for the key command
type KeyRequest struct {
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// KeyHandler defines the function type for handling key commands
type KeyHandler func(cmd *cobra.Command, req *KeyRequest) error

// NewKeyCommand creates a new key command with the provided handler function
func NewKeyCommand(handler KeyHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "key",
		Short:   "Key Management changes to attribute value",
		Hidden: true,
		RunE: func(cmd *cobra.Command, args []string) error {
			return runKey(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runKey handles argument and flag extraction
func runKey(cmd *cobra.Command, args []string, handler KeyHandler) error {

	// Create request
	req := &KeyRequest{
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
