// Code generated by adder. DO NOT EDIT.

package policy_attributes_values_unsafe

import (
	
	"github.com/spf13/cobra"
)

// ReactivateRequestFlags represents the flags for the reactivate command
type ReactivateRequestFlags struct {
	Id string `json:"id"` // ID of the attribute value
}

// ReactivateRequest represents the parameters for the reactivate command
type ReactivateRequest struct {
	Flags ReactivateRequestFlags `json:"flags"`
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// ReactivateHandler defines the function type for handling reactivate commands
type ReactivateHandler func(cmd *cobra.Command, req *ReactivateRequest) error

// NewReactivateCommand creates a new reactivate command with the provided handler function
func NewReactivateCommand(handler ReactivateHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "reactivate",
		Short:   "Reactivate an attribute value",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runReactivate(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags
	cmd.Flags().StringP("id", "i", "", "ID of the attribute value")
	cmd.MarkFlagRequired("id")

	return cmd
}

// runReactivate handles argument and flag extraction
func runReactivate(cmd *cobra.Command, args []string, handler ReactivateHandler) error {
	id, _ := cmd.Flags().GetString("id")

	// Create request
	req := &ReactivateRequest{
		Flags: ReactivateRequestFlags{
			Id: id,
		},
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
