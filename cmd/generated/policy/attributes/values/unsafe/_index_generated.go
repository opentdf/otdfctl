// Code generated by adder. DO NOT EDIT.

package policy_attributes_values_unsafe

import (
	
	"github.com/spf13/cobra"
)

// UnsafeRequestFlags represents the flags for the unsafe command
type UnsafeRequestFlags struct {
	Force string `json:"force"` // Force unsafe change without confirmation
}

// UnsafeRequest represents the parameters for the unsafe command
type UnsafeRequest struct {
	Flags UnsafeRequestFlags `json:"flags"`
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// UnsafeHandler defines the function type for handling unsafe commands
type UnsafeHandler func(cmd *cobra.Command, req *UnsafeRequest) error

// NewUnsafeCommand creates a new unsafe command with the provided handler function
func NewUnsafeCommand(handler UnsafeHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "unsafe",
		Short:   "Unsafe changes to attribute values",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runUnsafe(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags
	cmd.Flags().String("force", "", "Force unsafe change without confirmation")

	return cmd
}

// runUnsafe handles argument and flag extraction
func runUnsafe(cmd *cobra.Command, args []string, handler UnsafeHandler) error {
	force, _ := cmd.Flags().GetString("force")

	// Create request
	req := &UnsafeRequest{
		Flags: UnsafeRequestFlags{
			Force: force,
		},
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
