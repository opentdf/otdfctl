// Code generated by adder. DO NOT EDIT.

package policy_attributes

import (
	
	"github.com/spf13/cobra"
)


// AttributesRequest represents the parameters for the attributes command
type AttributesRequest struct {
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// AttributesHandler defines the function type for handling attributes commands
type AttributesHandler func(cmd *cobra.Command, req *AttributesRequest) error

// NewAttributesCommand creates a new attributes command with the provided handler function
func NewAttributesCommand(handler AttributesHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "attributes",
		Aliases: []string{"attr", "attribute"},
		Short:   "Manage attributes",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runAttributes(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runAttributes handles argument and flag extraction
func runAttributes(cmd *cobra.Command, args []string, handler AttributesHandler) error {

	// Create request
	req := &AttributesRequest{
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
