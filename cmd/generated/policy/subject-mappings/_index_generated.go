// Code generated by adder. DO NOT EDIT.

package policy_subject_mappings

import (
	
	"github.com/spf13/cobra"
)


// SubjectMappingsRequest represents the parameters for the subject-mappings command
type SubjectMappingsRequest struct {
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// SubjectMappingsHandler defines the function type for handling subject-mappings commands
type SubjectMappingsHandler func(cmd *cobra.Command, req *SubjectMappingsRequest) error

// NewSubjectMappingsCommand creates a new subject-mappings command with the provided handler function
func NewSubjectMappingsCommand(handler SubjectMappingsHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "subject-mappings",
		Aliases: []string{"subm", "sm", "submap", "subject-mapping"},
		Short:   "Subject mappings",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runSubjectMappings(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runSubjectMappings handles argument and flag extraction
func runSubjectMappings(cmd *cobra.Command, args []string, handler SubjectMappingsHandler) error {

	// Create request
	req := &SubjectMappingsRequest{
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
