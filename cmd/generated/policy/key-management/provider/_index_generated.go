// Code generated by adder. DO NOT EDIT.

package policy_key_management_provider

import (
	
	"github.com/spf13/cobra"
)


// ProviderRequest represents the parameters for the provider command
type ProviderRequest struct {
}

// ProviderHandler defines the interface for handling provider commands
type ProviderHandler interface {
	HandleProvider(cmd *cobra.Command, req *ProviderRequest) error
}

// NewProviderCommand creates a new provider command with the provided handler
func NewProviderCommand(handler ProviderHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "provider",
		Aliases: []string{"p"},
		Short:   "Provider configuration for Key Management",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runProvider(cmd, args, handler)
		},
	}

	// Register flags

	return cmd
}

// runProvider handles argument and flag extraction
func runProvider(cmd *cobra.Command, args []string, handler ProviderHandler) error {

	// Create request
	req := &ProviderRequest{
	}

	// Call handler
	return handler.HandleProvider(cmd, req)
}
