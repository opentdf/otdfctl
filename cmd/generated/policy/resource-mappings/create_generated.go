// Code generated by adder. DO NOT EDIT.

package policy_resource_mappings

import (
	
	"github.com/spf13/cobra"
)

// CreateRequestFlags represents the flags for the create command
type CreateRequestFlags struct {
	AttributeValueId string `json:"attributeValueId"` // The ID of the attribute value to map to the resource.
	Terms string `json:"terms"` // The synonym terms to match for the resource mapping.
	GroupId string `json:"groupId"` // The ID of the resource mapping group to assign this mapping to
	Label string `json:"label"` // Optional metadata 'labels' in the format: key=value
}

// CreateRequest represents the parameters for the create command
type CreateRequest struct {
	Flags CreateRequestFlags `json:"flags"`
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// CreateHandler defines the function type for handling create commands
type CreateHandler func(cmd *cobra.Command, req *CreateRequest) error

// NewCreateCommand creates a new create command with the provided handler function
func NewCreateCommand(handler CreateHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "create",
		Aliases: []string{"add", "new", "c"},
		Short:   "Create a resource mapping",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runCreate(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags
	cmd.Flags().String("attribute-value-id", "", "The ID of the attribute value to map to the resource.")
	cmd.Flags().String("terms", "", "The synonym terms to match for the resource mapping.")
	cmd.Flags().String("group-id", "", "The ID of the resource mapping group to assign this mapping to")
	cmd.Flags().StringP("label", "l", "", "Optional metadata 'labels' in the format: key=value")

	return cmd
}

// runCreate handles argument and flag extraction
func runCreate(cmd *cobra.Command, args []string, handler CreateHandler) error {
	attributeValueId, _ := cmd.Flags().GetString("attribute-value-id")
	terms, _ := cmd.Flags().GetString("terms")
	groupId, _ := cmd.Flags().GetString("group-id")
	label, _ := cmd.Flags().GetString("label")

	// Create request
	req := &CreateRequest{
		Flags: CreateRequestFlags{
			AttributeValueId: attributeValueId,
			Terms: terms,
			GroupId: groupId,
			Label: label,
		},
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
