// Code generated by adder. DO NOT EDIT.

package policy_actions

import (
	
	"github.com/spf13/cobra"
)


// ActionsRequest represents the parameters for the actions command
type ActionsRequest struct {
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// ActionsHandler defines the function type for handling actions commands
type ActionsHandler func(cmd *cobra.Command, req *ActionsRequest) error

// NewActionsCommand creates a new actions command with the provided handler function
func NewActionsCommand(handler ActionsHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "actions",
		Aliases: []string{"action"},
		Short:   "Manage Actions",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runActions(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runActions handles argument and flag extraction
func runActions(cmd *cobra.Command, args []string, handler ActionsHandler) error {

	// Create request
	req := &ActionsRequest{
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
