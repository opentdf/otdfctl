// Code generated by adder. DO NOT EDIT.

package policy_kas_grants

import (
	
	"github.com/spf13/cobra"
)


// KasGrantsRequest represents the parameters for the kas-grants command
type KasGrantsRequest struct {
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// KasGrantsHandler defines the function type for handling kas-grants commands
type KasGrantsHandler func(cmd *cobra.Command, req *KasGrantsRequest) error

// NewKasGrantsCommand creates a new kas-grants command with the provided handler function
func NewKasGrantsCommand(handler KasGrantsHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "kas-grants",
		Aliases: []string{"kasg", "kas-grant"},
		Short:   "Manage Key Access Server grants",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runKasGrants(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runKasGrants handles argument and flag extraction
func runKasGrants(cmd *cobra.Command, args []string, handler KasGrantsHandler) error {

	// Create request
	req := &KasGrantsRequest{
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
