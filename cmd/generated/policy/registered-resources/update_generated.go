// Code generated by adder. DO NOT EDIT.

package policy_registered_resources

import (
	
	"github.com/spf13/cobra"
)

// UpdateRequestFlags represents the flags for the update command
type UpdateRequestFlags struct {
	Id string `json:"id"` // ID of the registered resource to update
	Name string `json:"name"` // Optional updated name of the registered resource (must be unique within Policy)
	Label string `json:"label"` // Optional metadata 'labels' in the format: key=value
	ForceReplaceLabels string `json:"forceReplaceLabels"` // Destructively replace entire set of existing metadata 'labels' with any provided to this command
}

// UpdateRequest represents the parameters for the update command
type UpdateRequest struct {
	Flags UpdateRequestFlags `json:"flags"`
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// UpdateHandler defines the function type for handling update commands
type UpdateHandler func(cmd *cobra.Command, req *UpdateRequest) error

// NewUpdateCommand creates a new update command with the provided handler function
func NewUpdateCommand(handler UpdateHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "update",
		Aliases: []string{"u"},
		Short:   "Update a Registered Resource",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runUpdate(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags
	cmd.Flags().StringP("id", "i", "", "ID of the registered resource to update")
	cmd.MarkFlagRequired("id")
	cmd.Flags().String("name", "", "Optional updated name of the registered resource (must be unique within Policy)")
	cmd.Flags().StringP("label", "l", "", "Optional metadata 'labels' in the format: key=value")
	cmd.Flags().String("force-replace-labels", "%!s(bool=false)", "Destructively replace entire set of existing metadata 'labels' with any provided to this command")

	return cmd
}

// runUpdate handles argument and flag extraction
func runUpdate(cmd *cobra.Command, args []string, handler UpdateHandler) error {
	id, _ := cmd.Flags().GetString("id")
	name, _ := cmd.Flags().GetString("name")
	label, _ := cmd.Flags().GetString("label")
	forceReplaceLabels, _ := cmd.Flags().GetString("force-replace-labels")

	// Create request
	req := &UpdateRequest{
		Flags: UpdateRequestFlags{
			Id: id,
			Name: name,
			Label: label,
			ForceReplaceLabels: forceReplaceLabels,
		},
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
