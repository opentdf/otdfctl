// Code generated by adder. DO NOT EDIT.

package policy_registered_resources

import (
	
	"github.com/spf13/cobra"
)


// RegisteredResourcesRequest represents the parameters for the registered-resources command
type RegisteredResourcesRequest struct {
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// RegisteredResourcesHandler defines the function type for handling registered-resources commands
type RegisteredResourcesHandler func(cmd *cobra.Command, req *RegisteredResourcesRequest) error

// NewRegisteredResourcesCommand creates a new registered-resources command with the provided handler function
func NewRegisteredResourcesCommand(handler RegisteredResourcesHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "registered-resources",
		Aliases: []string{"reg-res"},
		Short:   "Manage Registered Resources",
		Hidden: true,
		RunE: func(cmd *cobra.Command, args []string) error {
			return runRegisteredResources(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runRegisteredResources handles argument and flag extraction
func runRegisteredResources(cmd *cobra.Command, args []string, handler RegisteredResourcesHandler) error {

	// Create request
	req := &RegisteredResourcesRequest{
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
