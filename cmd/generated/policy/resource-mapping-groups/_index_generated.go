// Code generated by adder. DO NOT EDIT.

package policy_resource_mapping_groups

import (
	
	"github.com/spf13/cobra"
)


// ResourceMappingGroupsRequest represents the parameters for the resource-mapping-groups command
type ResourceMappingGroupsRequest struct {
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// ResourceMappingGroupsHandler defines the function type for handling resource-mapping-groups commands
type ResourceMappingGroupsHandler func(cmd *cobra.Command, req *ResourceMappingGroupsRequest) error

// NewResourceMappingGroupsCommand creates a new resource-mapping-groups command with the provided handler function
func NewResourceMappingGroupsCommand(handler ResourceMappingGroupsHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "resource-mapping-groups",
		Aliases: []string{"resmg", "remapgrp", "resource-mapping-group"},
		Short:   "Manage resource mapping groups",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runResourceMappingGroups(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runResourceMappingGroups handles argument and flag extraction
func runResourceMappingGroups(cmd *cobra.Command, args []string, handler ResourceMappingGroupsHandler) error {

	// Create request
	req := &ResourceMappingGroupsRequest{
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
