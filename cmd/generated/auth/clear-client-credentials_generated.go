// Code generated by adder. DO NOT EDIT.

package auth

import (
	
	"github.com/spf13/cobra"
)

// ClearClientCredentialsRequestFlags represents the flags for the clear-client-credentials command
type ClearClientCredentialsRequestFlags struct {
	All string `json:"all"` // Deprecated -- see the `profile` subcommand
}

// ClearClientCredentialsRequest represents the parameters for the clear-client-credentials command
type ClearClientCredentialsRequest struct {
	Flags ClearClientCredentialsRequestFlags `json:"flags"`
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// ClearClientCredentialsHandler defines the function type for handling clear-client-credentials commands
type ClearClientCredentialsHandler func(cmd *cobra.Command, req *ClearClientCredentialsRequest) error

// NewClearClientCredentialsCommand creates a new clear-client-credentials command with the provided handler function
func NewClearClientCredentialsCommand(handler ClearClientCredentialsHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "clear-client-credentials",
		Short:   "Clear the cached client credentials",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runClearClientCredentials(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags
	cmd.Flags().String("all", "%!s(bool=false)", "Deprecated -- see the `profile` subcommand")

	return cmd
}

// runClearClientCredentials handles argument and flag extraction
func runClearClientCredentials(cmd *cobra.Command, args []string, handler ClearClientCredentialsHandler) error {
	all, _ := cmd.Flags().GetString("all")

	// Create request
	req := &ClearClientCredentialsRequest{
		Flags: ClearClientCredentialsRequestFlags{
			All: all,
		},
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
