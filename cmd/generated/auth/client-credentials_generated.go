// Code generated by adder. DO NOT EDIT.

package auth

import (
	
	"github.com/spf13/cobra"
)


// ClientCredentialsRequest represents the parameters for the client-credentials command
type ClientCredentialsRequest struct {
	RawArguments []string `json:"raw_arguments"` // Raw command line arguments passed to the command
}

// ClientCredentialsHandler defines the function type for handling client-credentials commands
type ClientCredentialsHandler func(cmd *cobra.Command, req *ClientCredentialsRequest) error

// NewClientCredentialsCommand creates a new client-credentials command with the provided handler function
func NewClientCredentialsCommand(handler ClientCredentialsHandler) *cobra.Command {
	cmd := &cobra.Command{
		Use:     "client-credentials",
		Short:   "Authenticate to the platform with the client-credentials flow",
		RunE: func(cmd *cobra.Command, args []string) error {
			return runClientCredentials(cmd, args, handler)
		},
	}

	// Register persistent flags

	// Register flags

	return cmd
}

// runClientCredentials handles argument and flag extraction
func runClientCredentials(cmd *cobra.Command, args []string, handler ClientCredentialsHandler) error {

	// Create request
	req := &ClientCredentialsRequest{
		RawArguments: args,
	}

	// Call handler
	return handler(cmd, req)
}
