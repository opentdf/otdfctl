name: 'end-to-end'
description: 'Run end-to-end tests for the otdfctl CLI'
inputs:
  otdfctl-ref:
    required: false
    description: 'The ref to check out for the otdfctl CLI'
    default: 'main'

runs:
  using: 'composite'
  steps:
    - name: Check out otdfctl CLI
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        repository: opentdf/otdfctl
        ref: ${{ inputs.otdfctl-ref }}
        path: otdfctl

    # Build the CLI and run tests
    - name: Set up go (CLI version, if needed)
      if: steps.setup-go.outcome != 'success'
      uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7
      with:
        go-version-file: otdfctl/go.mod
    - name: Build the CLI
      shell: bash
      run: go build .
      working-directory: otdfctl
    - name: Build the CLI in test mode
      shell: bash
      run: make build-test
      working-directory: otdfctl
    - name: Set up the CLI config
      shell: bash
      run: cp otdfctl-example.yaml otdfctl.yaml
      working-directory: otdfctl
    - name: Setup Bats and bats libs
      uses: bats-core/bats-action@2.0.0
    - name: Run Bats tests
      shell: bash
      working-directory: otdfctl
      run: bats --tap e2e | tee bats-results.tap
      env:
        # Define 'bats' install location in ubuntu
        BATS_LIB_PATH: /usr/lib
        # Terminal width for testing printed output
        TEST_TERMINAL_WIDTH: 200
    - name: Upload Bats TAP results
      if: always() # ensures test report is uploaded even if tests fail
      uses: actions/upload-artifact@v4
      with:
        name: bats-test-results
        path: otdfctl/bats-results.tap
#    - name: Integrate Bats test results into TestRail
#      shell: bash
#      working-directory: otdfctl
#      run: |
#        cd e2e
#        cp ./testrail-integration/samples-for-virtru-instance/testrail-virtru.config.json ./testrail-integration/testrail.config.json
#        cp ./testrail-integration/samples-for-virtru-instance/testname-to-testrail-id.virtru.json ./testrail-integration/testname-to-testrail-id.json
#        ./upload-bats-test-results-to-testrail.sh
#      continue-on-error: true
#      env:
#        TESTRAIL_USER: ${{ steps.gcp-secrets-team.outputs.TESTRAIL_USER }}
#        TESTRAIL_PASS: ${{ secrets.TESTRAIL_PASS }}