{
  "Actions": {
    "Create a new custom action - Good": "C871535",
    "Create a new action - Bad": "C871536",
    "Get an action - Good": "C871537",
    "Get an action - Bad": "C871538",
    "List actions": "C871539",
    "Update action": "C871540",
    "Delete action - bad": "C871541",
    "Delete action - good": "C871542"
  },
  "Attributes": {
    "Create an attribute - with values": "C793409",
    "Create an attribute - bad": "C793410",
    "Get an attribute definition - good": "C793412",
    "Get an attribute definition - bad": "C793413",
    "Update an attribute definition (safe) - good": "C793414",
    "Update an attribute definition (safe) - bad": "C793415",
    "List attribute definitions": "C793416",
    "List - comprehensive pagination tests": "C871543",
    "Deactivate then unsafe reactivate an attribute definition": "C793417",
    "Unsafe update an attribute definition": "C793418",
    "Assign/Remove KAS key from attribute definition - With Attribute Id": "C874449",
    "Assign/Remove KAS key from attribute definition - With Attribute FQN": "C874450",
    "Assign/Remove KAS key from attribute value - With Value Id": "C874451",
    "Assign/Remove KAS key from attribute value - With Value FQN": "C874452",
    "KAS key assignment error handling - attribute": "C874453",
    "KAS key assignment error handling - attribute value": "C874454"
  },
  "Auth": {
    "helpful error if wrong platform endpoint host": "C793419",
    "helpful error if bad credentials": "C793420",
    "helpful error if missing client credentials": "C793421",
    "helpful error if missing host": "C793422"
  },
  "Encrypt/Decrypt": {
    "roundtrip TDF3, no attributes, file": "C793423",
    "roundtrip TDF3, no attributes, ec-wrapping, file": "C797126",
    "roundtrip TDF3, one attribute, stdin": "C793424",
    "roundtrip TDF3, one attribute, mixed case FQN, stdin": "C793425",
    "roundtrip TDF3, assertions, stdin": "C797127",
    "roundtrip TDF3, assertions with HS256 keys and verification, file": "C797128",
    "roundtrip TDF3, assertions with RS256 keys and verification, file": "C797129",
    "roundtrip NANO, no attributes, file": "C793426",
    "roundtrip NANO, no attributes, file, ecdsa binding": "C793427",
    "roundtrip NANO, one attribute, stdin": "C793428",
    "roundtrip NANO, one attribute, stdin, plaintext policy mode": "C874680",
    "roundtrip NANO, one attribute, mixed case FQN, stdin": "C793429",
    "roundtrip TDF3, with target version < 4.3.0": "C871544",
    "roundtrip TDF3, with target version >= 4.3.0": "C871545",
    "roundtrip TDF3, with allowlist containing platform kas": "C871546",
    "roundtrip TDF3, with allowlist containing non existent kas (should fail)": "C871547",
    "roundtrip TDF3, ignoring allowlist": "C871548",
    "roundtrip NANO, with allowlist containing platform kas": "C871549",
    "roundtrip NANO, with allowlist containing non existent kas (should fail)": "C871550",
    "roundtrip NANO, ignoring allowlist": "C871551"
  },
  "KAS Grants": {
    "Unassign rejects more than one type of grant at once": "C793434",
    "Assign grant prints warning": "C874455",
    "Optional ID flag string error message": "C793435"
  },
  "KAS Keys Mappings": {
    "kas-keys-mappings: list key mappings for a specific key by kas id": "C874696",
    "kas-keys-mappings: list key mappings for a specific key by kas name": "C874697",
    "kas-keys-mappings: list key mappings for a specific key by kas uri": "C874698",
    "kas-keys-mappings: list key mappings with pagination": "C874699",
    "kas-keys-mappings: list key mappings - required together are missing": "C874700",
    "kas-keys-mappings: list key mappings - mutually exclusive flags": "C874701"
  },
  "KAS Keys": {
    "kas-keys: create key (local mode, rsa:2048)": "C874456",
    "kas-keys: create key (local mode, ec:secp256r1)": "C874457",
    "kas-keys: create key (public_key mode)": "C874458",
    "kas-keys: create key (remote mode)": "C874459",
    "kas-keys: create key (provider mode)": "C874460",
    "kas-keys: create key with labels": "C874461",
    "kas-keys: create key (missing key-id)": "C874462",
    "kas-keys: create key (missing algorithm)": "C874463",
    "kas-keys: create key (missing mode)": "C874464",
    "kas-keys: create key (local mode, missing wrapping-key-id)": "C874465",
    "kas-keys: create key (local mode, missing wrapping-key)": "C874466",
    "kas-keys: create key (public_key mode, missing pem)": "C874467",
    "kas-keys: create key (remote mode, missing pem)": "C874468",
    "kas-keys: create key (remote mode, missing provider-config-id)": "C874469",
    "kas-keys: create key (remote mode, missing wrapping-key-id)": "C874470",
    "kas-keys: create key (provider mode, missing wrapping-key-id)": "C874471",
    "kas-keys: create key (provider mode, missing provider-config-id)": "C874472",
    "kas-keys: create key (remote mode, pem not base64)": "C874473",
    "kas-keys: create key (public_key mode, pem not base64)": "C874474",
    "kas-keys: create key (missing kas identifier)": "C874475",
    "kas-keys: create key (using kasName)": "C874476",
    "kas-keys: create key (using kasUri)": "C874477",
    "kas-keys: create key (invalid algorithm value)": "C874478",
    "kas-keys: create key (invalid mode value)": "C874479",
    "kas-keys: create key (duplicate key-id)": "C874480",
    "kas-keys: create key (invalid kas identifier)": "C874481",
    "kas-keys: create key (invalid hex encoded wrapping-key)": "C874482",
    "kas-keys: get key by system ID": "C874483",
    "kas-keys: get key by user key-id and kasId": "C874484",
    "kas-keys: get key by user key-id and kasName": "C874485",
    "kas-keys: get key by user key-id and kasUri": "C874486",
    "kas-keys: get key (failure: only key-id, missing KAS identifier)": "C874487",
    "kas-keys: get key (failure: only kas, missing key-id or system id)": "C874488",
    "kas-keys: get key (not found by system ID)": "C874489",
    "kas-keys: get key (not found by user key-id and kas)": "C874490",
    "kas-keys: update key labels (add)": "C874491",
    "kas-keys: update key labels (replace)": "C874492",
    "kas-keys: update key (not found)": "C874493",
    "kas-keys: update key (missing id)": "C874494",
    "kas-keys: list keys (default limit and offset)": "C874495",
    "kas-keys: list keys (pagination with limit and offset)": "C874496",
    "kas-keys: list keys (filter by algorithm rsa:2048)": "C874497",
    "kas-keys: list keys (filter by kas)": "C874498",
    "kas-keys: list keys (filter by kasName)": "C874499",
    "kas-keys: list keys (filter by kasUri)": "C874500",
    "kas-keys: list keys (invalid algorithm)": "C874501",
    "kas-keys: rotate key": "C874502",
    "kas-keys: rotate key (missing key)": "C874503",
    "kas-keys: rotate key (missing key-id)": "C874504",
    "kas-keys: rotate key (missing algorithm)": "C874505",
    "kas-keys: rotate key (missing mode)": "C874506",
    "kas-keys: rotate key (local mode, missing wrapping-key-id)": "C874507",
    "kas-keys: rotate key (local mode, missing wrapping-key)": "C874508",
    "kas-keys: rotate key (public_key mode, missing public-key-pem)": "C874509",
    "kas-keys: rotate key (remote mode, missing provider-config-id)": "C874510",
    "kas-keys: rotate key (invalid algorithm)": "C874511",
    "kas-keys: rotate key (invalid mode)": "C874512",
    "kas-keys: rotate key (invalid hex encoded wrapping-key)": "C874513",
    "kas-keys: import key sucessful": "C874682",
    "kas-keys: import key successful (legacy=true)": "C875227",
    "kas-keys: import key succesful (legacy=false)": "C875228",
    "kas-keys: import key failure (legacy=invalid)": "C875229",
    "kas-keys: import key failure - missing required private key": "C874683",
    "kas-keys: import key failure - invalid wrapping key": "C874684",
    "kas-keys: import key failure - invalid public key PEM": "C874685",
    "kas-keys: import key failure - invalid private key PEM": "C874687",
    "kas-keys: import key failure - invalid algorithm": "C874688",
    "kas-keys: import key failure - missing wrapping key ID": "C874689",
    "kas-keys: import key failure - missing wrapping key": "C874690",
    "kas-keys: delete key": "C874691",
    "kas-keys: delete key failure - (missing id)": "C874692",
    "kas-keys: delete key failure - (missing key-id)": "C874693",
    "kas-keys: delete key failure - (missing kas-uri)": "C874694"
  },
  "KAS Registry": {
    "create KAS registration with invalid URI - fails": "C797131",
    "create KAS registration with duplicate URI - fails": "C797132",
    "create KAS registration with duplicate name - fails": "C797133",
    "create KAS registration with invalid name - fails": "C797134",
    "update registered KAS": "C793438",
    "update registered KAS with invalid URI - fails": "C797135",
    "update registered KAS with invalid name - fails": "C797136",
    "list registered KASes": "C793439"
  },
  "Base Key": {
    "base-key: get (initially no base key should be set for a new KAS)": "C874514",
    "base-key: set by --key (uuid)": "C874515",
    "base-key: set by --key(id) and --kas(id)": "C874516",
    "base-key: get (after setting a base key)": "C874517",
    "base-key: set by --key(id) and --kas(name)": "C874518",
    "base-key: set by --key(id) and --kas(uri)": "C874519",
    "base-key: set, get, and verify previous base key": "C874520",
    "base-key: set (missing kas identifier)": "C874521",
    "base-key: set (missing key identifier: id or keyId)": "C874522",
    "base-key: set (using non-existent keyId)": "C874523",
    "base-key: set (using non-existent kasId)": "C874524"
  },
  "Namespaces": {
    "Create a namespace - Good": "C793440",
    "Create a namespace - Bad": "C793441",
    "Get a namespace - Good": "C793442",
    "Get a namespace - Bad": "C793443",
    "List namespaces - when active": "C793444",
    "Update namespace - Safe": "C793445",
    "Update namespace - Unsafe": "C793446",
    "Assign/Remove KAS key from namespace - With Namespace ID": "C874527",
    "Assign/Remove KAS key from namespace - With Namespace FQN": "C874528",
    "KAS key assignment error handling - namespace": "C874529",
    "Deactivate namespace": "C793447",
    "List namespaces - when inactive": "C793448",
    "Unsafe reactivate namespace": "C793449",
    "List namespaces - when reactivated": "C793450",
    "Unsafe delete namespace": "C793451",
    "List namespaces - when deleted": "C793452"
  },
  "Profile": {
    "profile create": "C793453",
    "profile list": "C793454",
    "profile get": "C793455",
    "profile delete": "C793456",
    "profile set-default": "C793457",
    "profile set-endpoint": "C793458"
  },
  "Provider Configuration": {
    "fail to create provider configuration without config": "C874530",
    "fail to create provider configuration without name": "C874531",
    "fail to create provider configuration with invalid config": "C874532",
    "create provider configuration": "C874533",
    "get provider configuration by id": "C874534",
    "get provider configuration by name": "C874535",
    "fail to get provider configuration - no required flags": "C874536",
    "fail to get provider configuration with non-existent name": "C874537",
    "list provider configurations": "C874538",
    "update provider configuration - success": "C874539",
    "fail to update provider configuration - missing id": "C874540",
    "fail to update provider configuration - no optional flags": "C874541",
    "fail to update provider configuration - invalid config format": "C874542",
    "delete provider configuration -- success": "C874543",
    "delete provider configuration fail -- no id": "C874544",
    "delete provider configuration fail -- no force": "C875223"
  },
  "Registered Resources": {
    "Create a registered resource - Good": "C874545",
    "Create a registered resource - Bad": "C874546",
    "Get a registered resource - Good": "C874547",
    "Get a registered resource - Bad": "C874548",
    "List registered resources": "C874549",
    "Update registered resource": "C874550",
    "Delete registered resource - Good": "C874551",
    "Delete registered resource - Bad": "C874552",
    "Create a registered resource value - Good": "C874553",
    "Create a registered resource value - Bad": "C874554",
    "Get a registered resource value - Good": "C874555",
    "Get a registered resource value - Bad": "C874556",
    "List registered resource values - Good": "C874557",
    "List registered resource values - Bad": "C874558",
    "Update registered resource values": "C874559",
    "Delete registered resource value - Good": "C874560",
    "Delete registered resource value - Bad": "C874561"
  },
  "Resource Mapping Groups": {
    "Create resource mapping group": "C874562",
    "Get resource mapping group": "C874563",
    "Update a resource mapping group": "C874564",
    "List resource mapping groups": "C874565",
    "Delete resource mapping group": "C874566"
  },
  "Resource Mapping": {
    "Create resource mapping": "C793459",
    "Create resource mapping in a group": "C874567",
    "Get resource mapping": "C793460",
    "Update a resource mapping": "C793461",
    "List resource mappings": "C793462",
    "Delete resource mapping": "C793463"
  },
  "Subject Condition Sets": {
    "Create a Subject Condition Set (SCS) - from file": "C794011",
    "Create a Subject Condition Set (SCS) - from flag value JSON": "C794012",
    "Get a SCS": "C794013",
    "Update a SCS - from flag value JSON": "C794014",
    "Update a SCS - from file": "C797138",
    "List SCS": "C794015",
    "Prune SCS - deletes unmapped SCS alone": "C794016"
  },
  "Subject Mapping": {
    "Create subject mapping": "C793464",
    "Match subject mapping": "C797137",
    "Get subject mapping": "C793465",
    "Update a subject mapping": "C793466",
    "List subject mappings": "C793467",
    "Delete subject mapping": "C793468"
  }
}
